import java.util.Scanner;
class Problem02 {
    public static void primeCheck(int number){

        int k = 0;

        if(number < 2){//exclude number < 2,because the min prime is 2
            System.out.println("Your number is not prime");
        }else if(number == 2){// screen min prime 2, because integer above 2 can be divided by integer from 2
                System.out.println("Your number is prime");
        }else{
            for(int j = 2; j < number; j++){//be divided by integer from 2 to (input number-1)
                if(number % j == 0){//anti-prime have divisor
                    System.out.println("Your number is not prime");
                    j = number;//jump out from loop
                }else{
                    k++;//the times that input number is not divisible
                    if(k == (number - 2))//if eveytime it is not divisible, then this input number is prime
                    System.out.println("Your number is prime");
                }
            }
        }
    }

    public static void main(String[] args){
        Scanner input = new Scanner(System.in).useDelimiter("\n");
        int number = 0;
        System.out.print("Please, insert a number: ");
        String numberText = input.next();

        //screen positive integer value
        if (numberText != null && numberText.matches("^[0-9]+$")){
            number = Integer.parseInt(numberText);//convert string to integer
            primeCheck(number);
        }
        else if(numberText != null && numberText.matches("^[-//+]?[0.0-9.0]+$")){
            System.out.println("Your number is not prime");
            }
            else{
            do{ System.out.print("invalid input!Enter again:"); //start loop if input is not integer
                numberText = input.next();
                // try again
                if (numberText != null && numberText.matches("^[0-9]+$")){
                    number = Integer.parseInt(numberText);//convert string to integer
                    primeCheck(number);
                }
                else if(numberText != null && numberText.matches("^[-//+]?[0.0-9.0]+$")){
                System.out.println("Your number is not prime");
                }
            }while( !numberText.matches("^[0-9]+$") && !numberText.matches("^[-//+]?[0.0-9.0]+$"));
        }

    }
}