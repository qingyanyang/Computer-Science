// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // screen one ram4k which address first 2 digits meet
    DMux4Way(in=load,sel=address[12..13],a=group1,b=group2,c=group3,d=group4);
    //finding the register
    RAM4K(in=in,load=group1,address=address[0..11],out=out1);
    RAM4K(in=in,load=group2,address=address[0..11],out=out2);
    RAM4K(in=in,load=group3,address=address[0..11],out=out3);
    RAM4K(in=in,load=group4,address=address[0..11],out=out4);
   
    //get the output 
    Mux4Way16(a=out1,b=out2,c=out3,d=out4,sel=address[12..13],out=out);
}