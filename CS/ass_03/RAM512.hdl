// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // screen one ram64 which address first 3 digits meet
    DMux8Way(in=load,sel=address[6..8],a=group1,b=group2,c=group3,d=group4,e=group5,f=group6,g=group7,h=group8);
    //finding the register 
    RAM64(in=in,load=group1,address=address[0..5],out=out1);
    RAM64(in=in,load=group2,address=address[0..5],out=out2);
    RAM64(in=in,load=group3,address=address[0..5],out=out3);
    RAM64(in=in,load=group4,address=address[0..5],out=out4);
    RAM64(in=in,load=group5,address=address[0..5],out=out5);
    RAM64(in=in,load=group6,address=address[0..5],out=out6);
    RAM64(in=in,load=group7,address=address[0..5],out=out7);
    RAM64(in=in,load=group8,address=address[0..5],out=out8);
    //get the output 
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[6..8],out=out);

}