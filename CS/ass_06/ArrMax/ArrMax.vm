// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

// Put your code here.
//arrMax(m,n)
//int *a;
//a = *m;
//max = *a;
//time=n-1
//while(time >0){
//a++;
//if(max< *a){
//max = *a
//}
//time--;
//}
//return

function ArrMax.arrMax 3
//get address of arr and put it to local 0
push argument 0
pop local 0
push local 0
//get the address of arr[0]
pop pointer 1
//get arr[0]
push that 0
//put it to variable max
pop local 1//max = arr[0] = *m
//get length of arr and sub 1 and put it to local variable time
push argument 1
push constant 1
sub
pop local 2//time = n-1
//start loop
label loop
//if time = 0, jump out of the loop
push local 2
push constant 0
eq
if-goto end
//temp++
push local 0
push constant 1
add
pop local 0
//get arr[i++]
push local 0
pop pointer 1
//if arr[i++] > max
//jump to swap
push that 0
push local 1
gt
if-goto swap
//else, continue
goto next
//max = arr[i++]
label swap
push that 0
pop local 1
//time--
label next
push local 2
push constant 1
sub
pop local 2
//go back to the start of the loop
goto loop
//return max
label end
push local 1
return



